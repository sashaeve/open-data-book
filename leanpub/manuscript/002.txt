#Публікація та оновлення відкритих даних

##Вибір формату даних та конвертація даних з одного формату в інший

Вибір формату даних залежить від способу збереження та інших факторів, проте в більшості випадків можна користуватись такими загальними правилами:

1. Найкращим форматом для неструктурованих текстових даних (тексти законів, розпоряджень, довідкових даних) є формат Markdown або TXT. На відміну від TXT, Markdown також може містити додаткову розмітку - заголовки, абзаци, посилання, зображення тощо. Варто пам’ятати, що існує декілька різновидів Markdown, тому варто вказувати який саме різновид використовується. Гіршим варіантом є формат HTML, найгіршими - doc/docx, pdf/tiff (окрім випадків, коли потрібна копія оригінального документу із підписом та печаткою).   
2. Для табличних даних потрібно використовувати формат CSV, в гіршому випадку - XLS/XLSX.  
3. Для сканів документів найкращий формат - TIFF, потім - PDF.  
4. До зображень встановлюється обов'язкова вимога до роздільності здатності, яка має дозволяти гарантоване розпізнавання (OCR) - не менше 300 dpi.  
5. Великі файли або групи файлів потрібно архівувати в форматі ZIP/7Z. Для файлів, що перевищують розмір 4 ГБ - RAR.  
6. Якщо дані змінюються постійно і формуються «на льоту», то їх взагалі можна не записувати у вигляді файлів. Достатньо вказувати доступ до них через адреси в Інтернет чи описаний алгоритм формування цих адрес на основі необхідних реквізитів та параметрів (через API). Рекомендованими форматами для доступу через API є JSON/XML/RDF, тому зберігати файли в цих форматах не потрібно (окрім випадків, коли дані зберігаються в цих форматах з самого початку).  
7. Бінарні формати потрібно використовувати лише за відсутності альтернативи.  

Часто дані зберігаються в форматах, що не відповідають визначеним вимогам відкритості. В такому разі на допомогу приходять різноманітні інструменти, за допомогою яких можна перевести той чи інший файл в інший формат. Це можуть бути як онлайн інструменти, так і програмні засоби, що встановлюються на робочу машину користувача. 

Програмних засобів, бібліотек та сервісів існує дуже багато, тому ви легко зможете знайти підходящий для вас інструмент. Зазвичай немає жодних проблем з конвертацією даних з відкритих форматів в інші відкриті формати. Проблеми, скоріш за все виникнуть з форматами Word/PDF, тому при виникненні такої задачі потрібно аналізувати ці файли окремо. 

Перелік деяких програмних засобів, що дозволяють конвертувати дані з одного формату в інший (перелік є не вичерпним):

1. Microsoft Word, Microsoft Excel, Microsoft Access.  
2. Графічні формати та PDF: Adobe Photoshop, Adobe Acrobat Reader, Foxit PDF Reader, Paint.NET, Corel Draw.  
3. Текстові дані: Notepad++.  
4. Програмні засоби: SPSS, Microsoft Azure ML, Matlab.  
5. Онлайн інструменти: [JSON to CSV](http://konklone.io/json/), [CSV to JSON](http://www.convertcsv.com/csv-to-json.htm), [JSON to C#](http://json2csharp.com/).  
6. Очищення HTML документів від Word стилів: [https://word2cleanhtml.com](https://word2cleanhtml.com/).  

##Основні помилки при оприлюдненні відкритих даних

###Чому Excel формат не є рекомендованим форматом?

В Постанові дозволяється викладати файли у форматі XLS/XLSX, що є форматам Microsoft Excel. Основна причина, по якій не рекомендується викладати Excel в тому, що програмне забезпечення дозволяє додавати розширене форматування, файли можуть містити пропуски, об’єднані комірці, вбудовані об’єкти, макроси та формули, що не дозволяють машинну обробку цих файлів.

Приклади Excel документів, що не відповідають правилам представлення даних у машиночитабельному форматі:

![](images\004.gif)

![](images\005.gif)

Приклади правильних файлів Excel:

![](images\006.gif)

![](images\007.gif)

Дані в такому форматі легко можна експортувати в CSV формат, що є рекомендованим форматом. 

###Оприлюднення занадто агрегованих даних

Розглянемо уявний приклад, коли потрібно оприлюднити інформацію про небезпечні ділянки, де найбільш часто трапляється велика кількість ДТП. 

Очікується оприлюднення такої інформації:

* ділянка та її координати;
* дата ДТП;
* кількість постраждалих та тип їх ушкоджень;
* область (місто);
* стан ділянки, де сталось ДТП.

Натомість розпорядник викладає таблицю, де вказано кількість ДТП по областях. Зрозуміло, що дані в такому вигляді є малоінформативними і не несуть в собі великої користі.

Розпорядники не повинні викладати статистичну інформацію. Натомість потрібно викладати детальну інформаію на рівні окремих транзакцій, випадків (наприклад, ДТП) або певної події. Всі бажаючі легко зможуть зробити статистичні таблиці чи агреговану статистику на базі цих даних.

##Призначення відповідальних за розкриття даних 

Кожен розпорядник даних повинен визначити відповідальну особу або декілька осіб, що будуть відповідати за аудит, обробку та викладення відкритих даних. Відповідальні особи повинні мати уявлення про те, які набори даних доступні та в якому вигляді, мати розуміння технічних аспектів роботи з даними (формати, розмір, аспекти роботи з реляційні і не реляційними базами даних тощо) та вміти користуватись єдиним порталом відкритих даних. Часто перед публікацією наборів даних потрібно здійснити їх аудит, обробку та/або конвертацію з одного формату в інший. 

##Аудит наборів відкритих даних і приоритетності їх публікації

Відомості, що публікуються у формі відктитих даних містять інформацію про діяльність державних органів і органів місцевого самоврядування, яка повинна розміщуватись в мережі відповідно до закону, а також відомості, що містять інформацію, яка збирається, зберігається, обробляється чи опублікована державними органами або органами місцевого самоврядування в рамках реалізації своїх повноважень.

Опублікування інформації необхідно здійснювати поетапно, враховуючи при цьому такі чинники:

1. потреба потенційними споживачами відповідних наборів відкритих даних, яка оцінюється відповідно до методики моніторингу і оцінки потреби відкритих даних;
2. ступінь готовності, що характеризується наявністю необхідних даних в електронному вигляді, а також готовністю організаційних, технічних, технологічних та інших засобів, необхідних для опублікування наборів відкритих даних;
3. витрати на публікацію (серед них: фінансові, тимчасові, трудові), необхідні для опублікування наборів відкритих даних і підтримки їх в актуальному стані.

Відомості, що володіють високим попитом і ступенем готовності, які потребують при цьому мінімальних витрат, повинні публікуватися в першочерговому порядку державними органами та органами муніципальної влади у формі відкритих даних.

При формуванні, як реєстру наборів відкритих даних, так і самих наборів відкритих даних слід враховувати такі фактори:

- публікації підлягають дані без попередньої первинної обробки;  
- для кожного набору даних повинна бути визначена особа, відповідальна за їх утримання: коректність введення, повноту і актуальність;  
- для кожного набору даних повинна бути встановлена періодичність оновлення з урахуванням потреб споживачів відкритих даних.

Реєстр відкритих даних формується та затверджується державним органом або органом місцевого самоврядування і після чого публікується в мережі на офіційному сайті органу.

##Підготовка даних до публікації

###Кодування файлів

Те, що ми бачимо на екрані як текст, насправді зберігається в текстовому файлі у вигляді числових значень. Комп'ютер перетворює числові значення на видимі символи. Це здійснюється за допомогою стандартів кодування.

Стандарт кодування є схемою нумерації, яка призначає числовому значенню текстовий символ із набору символів. Набір символів може містити абеткові символи, числа та інші символи. Різні мови зазвичай складаються з різних наборів символів, тому існує багато різноманітних стандартів кодування для відображення наборів символів, які використовуються в різних мовах.

Стандарт кодування, який зберігається разом із текстовим файлом, містить інформацію, потрібну для відображення тексту на екрані комп'ютера. Наприклад, у кодуванні «Кирилиця (Windows)» буква «Й» має числове значення «201». Якщо на комп'ютері, що використовує кириличне кодування (для Windows), відкрити файл, який містить цей символ, комп'ютер зчитує числове значення «201» та відображає букву «Й» на екрані.

Однак, якщо той самий файл відкрити на комп'ютері, що використовує інше кодування, буде відображено символ, який відповідає числовому значенню «201» у стандарті кодування, використовуваному на цьому комп'ютері за промовчанням. Наприклад, якщо комп'ютер використовує західноєвропейський стандарт кодування (для Windows), то символ у вихідному файлі на базі кирилиці буде відображено як «E», а не як «Й», тому що в західноєвропейському стандарті кодування (для Windows) числове значення «201» відповідає символу «E».

*Windows-1251* (також вживаються назви Win1251, CP1251) — кодування символів, що є стандартним 8-бітовим кодуванням для всіх локалізованих українських і російських версій Microsoft Windows. Користується досить великою популярністю. Windows-1251 вигідно відрізняється від інших кирилічних кодувань наявністю практично всіх символів, що використовуються в слов'янській кирилічний типографії для звичайного тексту (відсутній тільки значок наголосу); вона містить всі символи для російської, української, білоруської, сербської і болгарської мов. ([Вікіпедія](https://uk.wikipedia.org/wiki/Windows-1251))

*UTF-8* (від англ. *Unicode Transformation Format* — формат перетворення Юнікоду) — кодування, що реалізовує представлення Юнікоду, сумісне з 8-бітовим кодуванням тексту. Текст, що складається тільки з символів з кодом меншим, ніж 128, при записі в UTF-8 перетворюється на звичайний текст ASCII. І навпаки, в тексті UTF-8 будь-який байт із значенням менше, ніж 128 зображає символ ASCII з тим же кодом. Решта символів Юнікоду зображається послідовностями завдовжки від 2 до 6 байтів (реально тільки до 4 байтів, оскільки використання кодів більших, ніж 221 не планується), в яких перший байт завжди має вид 11xxxxxx, а решта — 10xxxxxx. Простіше кажучи, у форматі UTF-8 символи латинського алфавіту, розділові знаки і символи управління ASCII записуються кодами US-ASCII, а решта символів кодується за допомогою октетів із старшим бітом 1. В результаті, навіть якщо програма не розпізнає Юнікод, то англійська мова і розмітка все одно відображатимуться правильно. ([Вікіпедія](https://uk.wikipedia.org/wiki/UTF-8))

Проблема заключається в тому, що більшість державних органів користуються  операційною системою Windows та зберігають всі файли та тексти у кодуванні Windows-1251, що часто є несумісними з іншими програмними засобами та операційними системами. Тому перед викладенням на data.gov.ua потрібно переконатись, що файли збережені з кодуванні UTF-8.

Ось такі символи можуть побачити користувачі при наявності проблем з кодуванням:

![](images\008.gif)
 
###Один файл чи декілька?

У випадку, якщо потрібно експортувати дані, які в початковому вигляді є реляційною базою (MySQL, Microsoft SQL, Oracle на ін.), наприклад:

![](images\009.gif)

то краще дані кожної таблиці експортувати в окремий файл.

Розглянемо приклад. Нехай маємо дві таблиці - виробники та моделі:

*Vendors (виробники)*

|Id  |Name     |Country|Website             |
|:--:|:-------:|:-----:|:------------------:|
|1   |Microsoft|USA    |http://microsoft.com|
|2   |Apple    |USA    |http://apple.com    |

*Models (моделі)*

|Id  |Name     |Vendor Code|
|:--:|:-------:|:---------:|
|1   |Surface  |1          |
|2   |iPhone   |2          |

Ці дані можна представити у вигляді одного файлу *models.csv*:

```CSV
Id;Name;Vendor;Country;Website
1;Surface;Microsoft;USA;http://microsoft.com
2;iPhone;Apple;USA;http://microsoft.com
```

У вигляді двох файлів:

*vendors.csv*:

```CSV
Id;Name;Country;Website
1;Microsoft;USA;http://microsoft.com
2;Apple;USA;http://apple.com
```
*models.csv*:

```CSV
Id;Name;VendorId
1;Surface;1
2;iPhone;2
```

Порівнння двох підходів

|Критерій                           |Один файл                                                |Багато файлів                        |
|:----------------------------------|:--------------------------------------------------------|:------------------------------------|
|Збитковість даних                  |Велика збитковість                                       |Мала збитковість                     |
|Фінальний розмір                   |Більший                                                  |Менший                               |
|Перевірка на цілісність            |Складна                                                  |Проста                               |
|Готовність до викорстання через API|Погана                                                   |Хороша, по суті відображає методи API|
|Кількість запитів                  |**Один** (перевага лише для невеликих за розміром файлів)|Багато                               |


Як видно з таблиці, другий варіант використовувати доцільніше.

При публікації даних на єдиному порталі структура та призначення кожного файлу повинні бути описані та опубліковані як окремі файли. Якщо розмір хоча б одного файлу велика, то допускається публікація всіх файлів у вигляді одного архівного файлу (але з детальним описом всіх файлів).

###Деперсоніфікація даних

Згідно закону [“Про захист персональних даних”](http://zakon3.rada.gov.ua/laws/show/2297-17) до персональних даних можна віднести будь-які відомості, за якими ідентифікується або може бути ідентифікована фізична особа, зокрема: прізвище, ім’я, по батькові, адреса, телефони, паспортні дані, національність, освіта, сімейний стан, релігійні та світоглядні переконання, стан здоров’я, матеріальний стан, дата і місце народження, місце проживання та перебування тощо, дані про особисті майнові та немайнові відносини цієї особи з іншими особами, зокрема членами сім’ї, а також відомості про події та явища, що відбувалися або відбуваються у побутовому, інтимному, товариському, професійному, діловому та інших сферах життя особи (за винятком даних стосовно виконання повноважень особою, яка займає посаду, пов’язану із здійсненням функцій держави або органу місцевого самоврядування) тощо. Вказаний перелік не є вичерпним.

Така інформація про фізичну особу та членів її сім’ї є конфіденційною і може оброблятися в тому числі поширюватись тільки за їх згодою, крім випадків, визначених законом, і лише в інтересах національної безпеки, економічного добробуту та прав людини.

Тому, якщо дані містять персональну інформацію, то такі набори повинні пройти процес деперсоніфікації даних, що означає видалення таких відомостей.

В більшості випадків прив’язку даних до конкретної людини можна замітити ідентифікатором (але це не може бути номер паспорту чи ІНН) шляхом генерації порядкого номеру або GUID, що можна зробити будь-якими програмними засобами. 

Приклад початкових даних:

|ПІП        |Місто|Телефон      |Група крові|
|:---------:|:---:|:-----------:|:---------:|
|Іванов І.І.|Київ |011 111 11 11|A(I)+      |
|Петров П.П.|Одеса|011 111 11 12|B(II)-     |

Кроводачі:

|ПІП        |Центр   |Дата      |
|:---------:|:------:|:--------:|
|Іванов І.І.|Охматдит|01.01.2016|
|Петров П.П.|Охматдит|01.02.2016|

Дані після деперсоналізації:

|ПІП|Місто|Група крові|
|:-:|:---:|:---------:|
|1  |Київ |A(I)+      |
|2  |Одеса|B(II)-     |

Кроводачі:

|ПІП|Центр   |Дата      |
|:-:|:------:|:--------:|
|1  |Охматдит|01.01.2016|
|2  |Охматдит|01.02.2016|

###Архівація наборів даних

Архівація даних необхідна для зменшення розмірів наборів даних, а, відповідно, необхідних ресурсів для зберігання даних на порталі, а також з метою зменшення трафіку для порталу та кінцевих споживачів. 

Потрібно пам’ятати, що архівація текстових даних може зменшити розміри файлів до 90%. Word/Excel/PDF дані можуть стискатись в середньому на 10-60%, майже не стискаються  зображення (лише на 1-3%).

Архівувати потрібно:

- історичні дані (наприклад, курси валют за попередній рік чи десятиліття);  
- усі файли набору, що мають розмір більше 50 МБ.  
- застрарілі версії наборів даних, якщо є доступ до оновлених версій набору відкритих даних  
- якщо публікується багатотомний набір, тоді рекомендується всі томи не копіювати і зберігати в одному архіві.  

Архівувати потрібно в форматах zip/7z/tar, що є кросплатформеними та не вимагають платних програм для деархівації. Рекомендується використовувати програму 7-zip [http://7-zip.org.ua/](http://7-zip.org.ua/) для архівування/деархівування даних для ОС Windows та вбудовані засоби в інших ОС.

###Публікація даних, що мають періодичність

Набори відкритих даних поділяються на частопубліковані дані (висока періодичність актуалізації даних - частіше чим 1 раз в тиждень), рідкопубліковані (рідше, чим раз в тиждень).

Для кожного набору даних в паспорті набора має бути вказана дана останнього оновлення.

**Частота оновлень може бути наступною:**

**Частооновлювані:**

* більше одного разу в день;
* кожного дня;
* кожного тижня

**Рідкооновлювальні:**

* кожного місяця;
* кожного квартала;
* кожних півроку;
* кожного року;
* по мірі зміни даних.

Для наборів даних, які оновлюються перідично (наприклад, курси валют або список денних транзакцій), то перш за все, необхідно визначити критерій, за яким відбуватиметься групування: дата, місяць, скликання (для депутатів) тощо.

Цей критерій має чітко бути описаний в паспорті даних, а назви файлів повинні містити цей критерій.

Наприклад, курси валют за 1 січня 2016 року при виборі критерію - дати:

>exchange_20160101.csv (exchange_yyyymmdd.csv):  
USD;20,3333  
RUB;0,3456  
EUR;27,9090

Приклад публікації курсів валют при виборі критерію - валюти:

>exchange_usd.csv (exchange_yyyymmdd.csv):  
20160103;20,3333  
20160102;20,4455  
20160101;20,3333

Для цього випадку логічніше групувати дані по даті.

Якщо набір даних містить інформацію, зміна яких відбувається досить рідко і не регулярно, то в такому разі дані повинні оновлюватись кожен раз, коли відбувається така зміна. Приклади: перелік дитсадочків, перелік аптек міста, розклад міського транспорту. В паспорті даних потрібно вказати орієнтовну кількість оновлень протягом місця чи року. 

Якщо набір даних містить інформацію про показники чи транзакції, що змінюються чи допонюються з однаковою регулярністю, то викладення цих даних повинно прив’язуватись до цього періоду. Приклади таких наборів: курси валют (оновлюються щоденно), державні закупівлі (оновлюються щоденно). Якщо кількість даних за певний період є великою, то можливо розбиття на менші кратні проміжки (тижні, дні, години), і навпаки, якщо кількість даних за певний проміжок мала, то можна збільшувати цей проміжок. Хорошою практикою є публікація проміжкових даних, наприклад, курси валют за сьогодні, і історичні дані за певний період (по рокам, десятиліттям чи за весь доступний період - в залежності від специфіки даних).

Якщо кількість даних є великою, зміни постійними і з непедбачуваною періодичністю (по суті, якщо дані оновлюються в реальному часі), зокрема, це стосується всіх реєстрів, то потрібно передбачити доступ до даних у вигляді API для того, щоб була змога завжди отримати актуальні дані. Архіви даних можуть також публікуватись з певною періодичністю, але з припискою, що вони є актуальними на певний момент часу. 

###Публікація схожих даних з різними структурами

Якщо суть даних схожа (однакова), проте в залежності від різних факторів структура відрізняється, то потрібно керуватись такими рекомендаціями:

Якщо структура даних всіх файлів схожа і відрізняється не значно, то приймається за основу одна структура (яка складатиметься з усіх стовбців всіх файлів), а відсутні дані заповнюються пустими значеннями.

Наприклад, маємо два файли з такими полями:

>A1,A2,A3,A4  
>1,  1,  1,   1  

>А1,А2,А3,А5  
>2,  2,  2,   2  

то за основу приймається структура А1,А2,А3,А4,А5 і фінальний файл матиме вигляд:

>А1,А2,А3,А4,А5  
>1,  1,  1,  1,  
>2,  2,  2,    ,  2  

У випадку, якщо стуктура файлів відрізняється значно, то такі файли потрібно розглядати як незалежні один від одного.

###Публікація даних у вигляді API та робота з даними великого обсягу

Є два основних способи організації доступу до даних - Data Hub (сховище даних) та API (Application Programming Interface - інтерфейс доступу до даних).

Data Hub краще підходить для даних, що змінюються рідко або час від часу, а API – для швидких оперативних запитів і міжсерверної взаємодії. Можлива комбінація двох способів, коли частина відкритих даних (довідники, списки) знаходяться в статичному вигляді на порталі, окремі елементи (картки чи тексти документів, фотографії, приєднані файли тощо) доступні за відповідною URI-адресою на іншому сервері, як зовнішні ресурси, а доступ до інформації, що постійно змінюється (записи реєстру) - через API.

Для API рекомендується використовувати [Open Data Protocol](http://www.odata.org/) (OData) - відкритий веб-протокол для запиту і оновлення даних. Протокол дозволяє виконувати операції з ресурсами, використовуючи в якості запитів HTTP-команди, і отримувати відповіді в форматах XML або JSON.

При публікації даних у вигляді API потрібно вказати тип даних - API. Крім того, в описі набору потрібо вказати посилання на документацію та інформацію про те, на яких умовах можна отримати дані - після реєстрації, платно/безоплатно, про умови використання, чи є обмеження на кількість та тип запитів, доступні формати, чи реалізований протокол OData.

###Канали розповсюдження відкритих даних

Відкриті дані можна розповсюджувати за допомогою таких каналів:

1. Через сайт data.gov.ua.
2. Через сайти місцевих органів самоврядування.
3. За допомогою API.
4. Через ftp-сервер.
5. Через файлообмінний протокол BitTorrent. 